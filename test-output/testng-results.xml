<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="11" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-21T16:30:02Z" name="Suite" finished-at="2023-04-21T16:30:05Z" duration-ms="3739">
    <groups>
    </groups>
    <test started-at="2023-04-21T16:30:02Z" name="Test" finished-at="2023-04-21T16:30:05Z" duration-ms="3739">
      <class name="GradleTest_RestAutomation.post_Test">
        <test-method signature="postwithpojo()[pri:0, instance:GradleTest_RestAutomation.post_Test@79da8dc5]" started-at="2023-04-21T22:00:04Z" name="postwithpojo" finished-at="2023-04-21T22:00:05Z" duration-ms="570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postwithpojo -->
        <test-method is-config="true" signature="LogBeforeMethod()[pri:0, instance:GradleTest_RestAutomation.post_Test@79da8dc5]" started-at="2023-04-21T22:00:04Z" name="LogBeforeMethod" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogBeforeMethod -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GradleTest_RestAutomation.post_Test@79da8dc5]" started-at="2023-04-21T22:00:05Z" name="getResult" finished-at="2023-04-21T22:00:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postwithpojo status=SUCCESS method=post_Test.postwithpojo()[pri:0, instance:GradleTest_RestAutomation.post_Test@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="postwithpojo_userreg()[pri:0, instance:GradleTest_RestAutomation.post_Test@79da8dc5]" started-at="2023-04-21T22:00:05Z" name="postwithpojo_userreg" description="registriion" finished-at="2023-04-21T22:00:05Z" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postwithpojo_userreg -->
        <test-method is-config="true" signature="LogBeforeMethod()[pri:0, instance:GradleTest_RestAutomation.post_Test@79da8dc5]" started-at="2023-04-21T22:00:05Z" name="LogBeforeMethod" finished-at="2023-04-21T22:00:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogBeforeMethod -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GradleTest_RestAutomation.post_Test@79da8dc5]" started-at="2023-04-21T22:00:05Z" name="getResult" finished-at="2023-04-21T22:00:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postwithpojo_userreg status=SUCCESS method=post_Test.postwithpojo_userreg()[pri:0, instance:GradleTest_RestAutomation.post_Test@79da8dc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- GradleTest_RestAutomation.post_Test -->
      <class name="GradleTest_RestAutomation.Getmethod">
        <test-method is-config="true" signature="config(java.lang.String, java.lang.String)[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:01Z" name="config" finished-at="2023-04-21T22:00:02Z" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Optional name Automation ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[API Report]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
        <test-method is-config="true" signature="LogBeforeMethod()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:02Z" name="LogBeforeMethod" finished-at="2023-04-21T22:00:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogBeforeMethod -->
        <test-method signature="detailsof7thid()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:02Z" name="detailsof7thid" description="get the numer of hashmaps" finished-at="2023-04-21T22:00:04Z" duration-ms="2605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detailsof7thid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getResult" finished-at="2023-04-21T22:00:04Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=detailsof7thid status=SUCCESS method=Getmethod.detailsof7thid()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="LogBeforeMethod()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="LogBeforeMethod" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogBeforeMethod -->
        <test-method signature="getnamesfromlist()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getnamesfromlist" description="get size of array" finished-at="2023-04-21T22:00:04Z" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getnamesfromlist -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getResult" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getnamesfromlist status=SUCCESS method=Getmethod.getnamesfromlist()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="LogBeforeMethod()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="LogBeforeMethod" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogBeforeMethod -->
        <test-method signature="getting_the_Responsebody()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getting_the_Responsebody" finished-at="2023-04-21T22:00:04Z" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getting_the_Responsebody -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getResult" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getting_the_Responsebody status=SUCCESS method=Getmethod.getting_the_Responsebody()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getting_the_headers()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getting_the_headers" finished-at="2023-04-21T22:00:04Z" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getting_the_headers -->
        <test-method is-config="true" signature="LogBeforeMethod()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="LogBeforeMethod" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogBeforeMethod -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getResult" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getting_the_headers status=SUCCESS method=Getmethod.getting_the_headers()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="LogBeforeMethod()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="LogBeforeMethod" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogBeforeMethod -->
        <test-method signature="page_total()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="page_total" description="validate total for page2 is 12" finished-at="2023-04-21T22:00:04Z" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- page_total -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getResult" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=page_total status=SUCCESS method=Getmethod.page_total()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="LogBeforeMethod()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="LogBeforeMethod" finished-at="2023-04-21T22:00:04Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogBeforeMethod -->
        <test-method signature="statuscodetest()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="statuscodetest" description="validate the status code" finished-at="2023-04-21T22:00:04Z" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statuscodetest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:04Z" name="getResult" finished-at="2023-04-21T22:00:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statuscodetest status=SUCCESS method=Getmethod.statuscodetest()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:GradleTest_RestAutomation.Getmethod@e7edb54]" started-at="2023-04-21T22:00:05Z" name="endReport" finished-at="2023-04-21T22:00:06Z" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- GradleTest_RestAutomation.Getmethod -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
